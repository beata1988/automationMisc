# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Select Check-in and Check-out Dates
- Location: C:\Users\beatriz.romero\OneDrive - Unosquare\Documents\Playwright\automationMisc\expedia\tests\UserStory1.spec.ts:20:7

# Error details

```
Error: expect(locator).toBeVisible()

Locator: getByText('Más de 300 propiedades')
Expected: visible
Received: <element(s) not found>
Call log:
  - expect.toBeVisible with timeout 5000ms
  - waiting for getByText('Más de 300 propiedades')

    at C:\Users\beatriz.romero\OneDrive - Unosquare\Documents\Playwright\automationMisc\expedia\tests\UserStory1.spec.ts:33:62
```

# Test source

```ts
   1 | import { test, expect, Page } from '@playwright/test';
   2 |
   3 | const destination = "new york";
   4 | const minPrice = "380000";
   5 | const maxPrice = "800000" 
   6 |  
   7 |
   8 | test('Search Hotels by Valid City Name', async ({ page }) => {
   9 |  
   10 |     await page.goto('https://www.hoteles.com/');
   11 |     await page.click('body');
   12 |     await page.click('[data-stid="destination_form_field-menu-trigger"]');
   13 |     await page.fill('input[id="destination_form_field"]', destination);
   14 |     await page.click('[aria-label="Times Square Nueva York, Nueva York, Estados Unidos"]');
   15 |     await page.click('[id="search_button"]');
   16 |     await page.getByRole('link', { name: 'Abre la página de Home2'}).isVisible();
   17 |    
   18 |   });
   19 |
   20 |   test('Select Check-in and Check-out Dates', async ({ page }) => {
   21 |   
   22 |
   23 |
   24 |     await page.goto('https://www.hoteles.com/');
   25 |     await page.click('body');
   26 |     await page.click('[data-stid="destination_form_field-menu-trigger"]');
   27 |     await page.fill('input[id="destination_form_field"]', destination);
   28 |     await page.click('[aria-label="Times Square Nueva York, Nueva York, Estados Unidos"]');
   29 |     await page.click('[data-stid="uitk-date-selector-input1-default"]');
   30 |     await page.locator(".uitk-day-clickable").nth(25).click();
   31 |     await page.locator(".uitk-day-clickable").nth(30).click();
   32 |     await page.click('[id="search_button"]');
>  33 |       await expect(page.getByText("Más de 300 propiedades")).toBeVisible(); //assert text presence
      |                                                              ^ Error: expect(locator).toBeVisible()
   34 |     await page.getByRole('link', { name: 'Abre la página de Home2'}).isVisible();
   35 |     
   36 |   });
   37 |
   38 |
   39 |   test('Apply "Guest Rating: 4+" Filter', async ({ page }) => {
   40 |  
   41 |     await page.goto('https://www.hoteles.com/');
   42 |     await page.click('body');
   43 |     await page.click('[data-stid="destination_form_field-menu-trigger"]');
   44 |     await page.fill('input[id="destination_form_field"]', destination);
   45 |     await page.click('[aria-label="Times Square Nueva York, Nueva York, Estados Unidos"]');
   46 |     await page.click('[data-stid="uitk-date-selector-input1-default"]');
   47 |     await page.locator(".uitk-day-clickable").nth(25).click();
   48 |     await page.locator(".uitk-day-clickable").nth(30).click();
   49 |     await page.click('[id="search_button"]');
   50 |   
   51 |
   52 |
   53 |     
   54 |     await page.locator('sort-filter-dropdown-sort').isVisible();
   55 |     await page.selectOption('select#sort-filter-dropdown-sort', { label: 'Puntuación de los huéspedes + nuestra selección' });
   56 |
   57 |
   58 |
   59 |     await page.getByRole('link', { name: 'Abre la página de Home2'}).isVisible();
   60 |     
   61 |
   62 |   });
   63 |
   64 |   test('Apply "Price" Filter', async ({ page }) => {
   65 |  
   66 |     await page.goto('https://www.hoteles.com/');
   67 |     await page.click('body');
   68 |     await page.click('[data-stid="destination_form_field-menu-trigger"]');
   69 |     await page.fill('input[id="destination_form_field"]', destination);
   70 |     await page.click('[aria-label="Times Square Nueva York, Nueva York, Estados Unidos"]');
   71 |     await page.click('[data-stid="uitk-date-selector-input1-default"]');
   72 |     await page.locator(".uitk-day-clickable").nth(25).click();
   73 |     await page.locator(".uitk-day-clickable").nth(30).click();
   74 |     await page.click('[id="search_button"]');
   75 |   
   76 |
   77 |
   78 |
   79 |     await page.fill('input[id="price-min"]', minPrice);
   80 |     await page.fill('input[id="price-max"]', maxPrice);
   81 |
   82 |    // await page.locator('sort-filter-dropdown-sort').isVisible();
   83 |     //await page.selectOption('select#sort-filter-dropdown-sort', { label: 'Puntuación de los huéspedes + nuestra selección' });
   84 |
   85 |
   86 |     await expect(page.getByText("27 propiedades")).toBeVisible(); //assert text presence
   87 |
   88 |   });
   89 |
   90 |   
   91 |   test('Sort by "Lowest Price"', async ({ page }) => {
   92 |   
   93 |     
   94 |     await page.goto('https://www.hoteles.com/');
   95 |     await page.click('body');
   96 |     await page.click('[data-stid="destination_form_field-menu-trigger"]');
   97 |     await page.fill('input[id="destination_form_field"]', destination);
   98 |     await page.click('[aria-label="Times Square Nueva York, Nueva York, Estados Unidos"]');
   99 |     await page.click('[data-stid="uitk-date-selector-input1-default"]');
  100 |     await page.locator(".uitk-day-clickable").nth(25).click();
  101 |     await page.locator(".uitk-day-clickable").nth(30).click();
  102 |     await page.click('[id="search_button"]');
  103 |   
  104 |
  105 |
  106 |     
  107 |     await page.locator('sort-filter-dropdown-sort').isVisible();
  108 |     await page.selectOption('select#sort-filter-dropdown-sort', { label: 'Precio (de menor a mayor)' });
  109 |
  110 |
  111 |
  112 |     await page.getByRole('link', { name: 'Abre la página de Home2'}).isVisible();
  113 | });
  114 |
  115 |
  116 |
```